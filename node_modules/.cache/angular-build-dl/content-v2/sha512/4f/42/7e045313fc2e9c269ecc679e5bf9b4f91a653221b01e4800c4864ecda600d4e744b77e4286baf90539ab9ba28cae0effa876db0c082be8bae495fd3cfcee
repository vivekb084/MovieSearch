{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Services/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/movie-list/movie-list.component.ts","webpack:///src/app/movie-list/movie-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","APIService","http","url","data","get","pipe","handleError","post","error","console","log","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MovieListComponent","apiservice","movieList","sortByOptions","sortbyModel","search","origMovieList","GenereOptions","genreModel","getMoviesList","getMoviesUrl","getData","subscribe","response","restructureData","getSortByOptions","getGenreOptions","i","length","newObj","objectKey","toString","checkAdded","concat","sort","j","genre","genreValue","trim","sortModel","compare","a","b","firstkey","secondkey","isNaN","toUpperCase","newList","director","toLowerCase","indexOf","name","push","newFilterList","genreFound","k","sortList","filterlist","searchMovies","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n\n  constructor(private http: HttpClient) { }\n\n  public getData(url:string,data={}): Observable<any> {\n    return this.http.get(url,data).pipe(\n      catchError(this.handleError),\n    );\n  }\n\n  public postData(url:string,data={}): Observable<any> {\n    return this.http.post(url,data).pipe(\n      catchError(this.handleError),\n    );\n  }\n\n  public handleError(error: HttpErrorResponse){\n    console.log(\"Error found \",error);\n    return throwError(error);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MovieListComponent } from './movie-list/movie-list.component';\n// import { APIService } from './Services/api.service';\n\n\nconst routes: Routes = [\n  { path: '', component: MovieListComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'goFynd';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MovieListComponent } from './movie-list/movie-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from '../Services/api.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit {\n\n  public movieList:any =[];\n  public sortByOptions = [];\n  public sortbyModel = ''\n  public search =''\n  public origMovieList:any=[]\n  public GenereOptions =[]\n  public genreModel = [];\n\n\n  constructor(public apiservice:APIService) {\n\n   }\n\n  ngOnInit(): void {\n    this.getMoviesList();\n  }\n\n   public getMoviesList(){\n    let getMoviesUrl = 'http://3.137.78.213/assets/JSONFiles/imdb.json'\n    this.apiservice.getData(getMoviesUrl).subscribe(\n      response => {\n        this.movieList=response;\n        this.restructureData();\n        this.getSortByOptions()\n        this.getGenreOptions();\n        this.origMovieList =this.movieList\n      }\n    )\n   }\n\n   public restructureData(){\n     for(let i=0;i<this.movieList.length;i++){\n        let newObj ={};\n        for(let objectKey in this.movieList[i]){\n          if(objectKey=='99popularity'){\n            newObj['Popularity99']=this.movieList[i][objectKey].toString();\n          }\n          else{\n            newObj[objectKey]=this.movieList[i][objectKey];\n          }\n      }\n      this.movieList[i]=newObj;\n     }\n   }\n\n   public getSortByOptions(){\n     let checkAdded ={}\n      for(let i=0;i<this.movieList.length;i++){\n        for(let objectKey in this.movieList[i]){\n          if((typeof this.movieList[i][objectKey])=='string'||(typeof this.movieList[i][objectKey])=='number'){\n            if(!checkAdded[objectKey]){\n              this.sortByOptions=this.sortByOptions.concat(objectKey)\n              checkAdded[objectKey]=true;\n            }\n          }\n        }\n      }\n      this.sortByOptions.sort()\n   }\n\n   public getGenreOptions(){\n     let checkAdded = {};\n     for(let i=0;i<this.movieList.length;i++){\n      for(let j=0;j<this.movieList[i].genre.length;j++){\n        let genreValue = this.movieList[i].genre[j].trim()\n        if(!checkAdded[genreValue]){\n          checkAdded[genreValue]=true;\n          this.GenereOptions=this.GenereOptions.concat(genreValue)\n        }\n      }\n     }\n     this.GenereOptions.sort()\n   }\n\n   public sortList(){\n     let sortModel = this.sortbyModel\n      this.movieList.sort(compare)\n      function compare(a,b){\n        let firstkey=a[sortModel],secondkey=b[sortModel];\n        if(isNaN(a[sortModel])){\n          firstkey=a[sortModel].toUpperCase();\n          secondkey=b[sortModel].toUpperCase();\n          if ( firstkey < secondkey ){\n            return -1;\n          }\n          if ( firstkey > secondkey ){\n            return 1;\n          }\n          return 0;\n        }\n        else{\n          if ( firstkey > secondkey ){\n            return -1;\n          }\n          if ( firstkey < secondkey ){\n            return 1;\n          }\n          return 0;\n        }\n        \n      }\n   }\n\n\n  public searchMovies(){\n     let newList =[]\n     this.movieList=this.origMovieList;\n\n     if(this.search){\n      for(let i=0;i<this.movieList.length;i++){\n        if((this.movieList[i].director.toLowerCase()).indexOf(this.search.toLowerCase()) >-1 || (this.movieList[i].name.toLowerCase()).indexOf(this.search.toLowerCase()) >-1 ){\n          newList.push(this.movieList[i]);\n        }\n      }\n      this.movieList=newList;\n    }\n  }\n\n  public filterlist(){\n    let newFilterList = []\n    this.movieList=this.origMovieList;\n\n    for(let i=0;i<this.movieList.length;i++){\n      let genreFound=false;\n      for(let j=0;j<this.genreModel.length;j++){\n        genreFound=false;\n        for(let k=0;k<this.movieList[i].genre.length;k++){\n          if(this.movieList[i].genre[k].trim().toLowerCase()==this.genreModel[j].trim().toLowerCase()){\n            genreFound=true;\n          }\n        }\n        if(!genreFound){\n          break;\n        }\n      }\n      if(genreFound){\n        newFilterList.push(this.movieList[i])\n      }\n    }\n\n    this.movieList=newFilterList\n  }\n\n}\n","<!-- <div>\n    Sort By: \n    <select (change)=\"sortList()\" [(ngModel)]=\"sortbyModel\">\n        <option *ngFor=\"let sortOption of sortByOptions\" [value]=\"sortOption\">{{sortOption | titlecase }}</option>\n    </select>\n</div> -->\n\n<!-- <div class=\"filter\">\n    Filter By: \n    <select (change)=\"filterlist()\" [(ngModel)]=\"genreModel\">\n        <option *ngFor=\"let genre of GenereOptions\" [value]=\"genre\">{{genre | titlecase }}</option>\n    </select>\n</div> -->\n\n<div class=\"sortby\">\n    Sort By: \n    <ng-multiselect-dropdown [placeholder]=\"'Select SortBy '\"\n    [data]=\"sortByOptions\" [settings]=\"{ \n        singleSelection: true,\n        itemsShowLimit: 10,\n        allowSearchFilter: true,\n        closeDropDownOnSelection:true\n      }\" [(ngModel)]=\"sortbyModel\"\n      (onSelect)=\"sortList()\"\n      (onDeSelect)=\"sortList()\"\n    ></ng-multiselect-dropdown>\n</div>\n\n\n<div class=\"filter\">\n    Filter By: \n    <ng-multiselect-dropdown [placeholder]=\"'Select Genre '\"\n    [data]=\"GenereOptions\" [settings]=\"{ \n        singleSelection: false,\n        itemsShowLimit: 10,\n        allowSearchFilter: true\n      }\" [(ngModel)]=\"genreModel\"\n      (onSelect)=\"filterlist()\"\n      (onDeSelect)=\"filterlist()\"\n    ></ng-multiselect-dropdown>\n</div>\n\n<div class=\"searchbox\">\n    Search By\n    <form class=\"searchboxform\" (ngSubmit)=\"searchMovies()\">\n        <input type=\"text\" [(ngModel)]=\"search\" name=\"search\">\n        <input type=\"submit\" value=\"Search\">\n    </form>\n</div>\n\n<div *ngIf=\"movieList.length==0\">\n    <h4>\n        No Records found\n    </h4>\n</div>\n\n<div *ngFor=\"let moviedata of movieList;let i = index\" class=\"movieBox\">\n    <ul>\n        <li style=\"margin-right: 10px;\">\n            <b>{{i+1}}.</b>\n        </li>\n        <li>\n            <div>\n                <b>Name :</b> {{moviedata.name}}\n            </div>\n            <div>\n                <b>Director :</b> {{moviedata.director}}\n            </div>\n            <div>\n                <b>IMDB :</b> {{moviedata.imdb_score}}\n            </div>\n            <div>\n                <b>99Popularity : </b>{{moviedata.Popularity99}}\n            </div>\n            <div>\n                <b>Genre : </b><span *ngFor=\"let genere of moviedata.genre;let isLast=last\" >{{genere}} {{isLast ? '' : ', '}}</span>\n            </div>\n        </li>\n    </ul>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}